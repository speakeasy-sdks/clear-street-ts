/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Trade direction
 */
export enum SideDirectionEnum {
  Buy = "buy",
  Sell = "sell",
  Null = "null",
}

/**
 * Trade position, if any
 */
export enum SidePositionEnum {
  Open = "open",
  Close = "close",
  Null = "null",
}

/**
 * Trade qualifier, if any
 */
export enum SideQualifierEnum {
  Short = "short",
}

/**
 * Trade direction, either buy or sell with qualifiers
 */
export class Side extends SpeakeasyBase {
  /**
   * Trade direction
   */
  @SpeakeasyMetadata()
  @Expose({ name: "direction" })
  direction: SideDirectionEnum;

  /**
   * Trade position, if any
   */
  @SpeakeasyMetadata()
  @Expose({ name: "position" })
  position?: SidePositionEnum;

  /**
   * Trade qualifier, if any
   */
  @SpeakeasyMetadata()
  @Expose({ name: "qualifier" })
  qualifier?: SideQualifierEnum;
}
